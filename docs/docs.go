// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Say hello to auth and to no-auth user",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "common"
                ],
                "summary": "SayHello",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/approved": {
            "get": {
                "description": "Количество полностью согласованных задач",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Согласованные задачи",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlerhttp.Report"
                        }
                    },
                    "401": {
                        "description": "не найден access token; авторизация не удалась",
                        "schema": {
                            "$ref": "#/definitions/handlerhttp.Error"
                        }
                    }
                }
            }
        },
        "/declined": {
            "get": {
                "description": "Количество несогласованных задач",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Отклоненные задачи",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlerhttp.Report"
                        }
                    },
                    "401": {
                        "description": "не найден access token; авторизация не удалась",
                        "schema": {
                            "$ref": "#/definitions/handlerhttp.Error"
                        }
                    }
                }
            }
        },
        "/pprof_state/": {
            "get": {
                "description": "Получение текущего состояния профилировщика (включен - выключен)",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pprof"
                ],
                "summary": "Статус профилировщика",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/pprof_state/off": {
            "get": {
                "description": "апи выключает доступ к роутам профилирования",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pprof"
                ],
                "summary": "Выключение профилировщика",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/pprof_state/on": {
            "get": {
                "description": "апи включает доступ к роутам профилирования",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "pprof"
                ],
                "summary": "Включение профилировщика",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/tasklist": {
            "get": {
                "description": "Суммарное время ожидания реакций по каждой задаче - сумма всех времен от создания задачи до нажатия на ссылку каждого согласующего",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Время реакций по задачам",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlerhttp.Report"
                        }
                    },
                    "401": {
                        "description": "не найден access token; авторизация не удалась",
                        "schema": {
                            "$ref": "#/definitions/handlerhttp.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlerhttp.Error": {
            "type": "object"
        },
        "handlerhttp.Report": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Analytic Service API",
	Description:      "mts teta team21 analytic-service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
